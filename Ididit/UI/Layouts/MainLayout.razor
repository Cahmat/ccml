@using Ididit.UI.Login

@inherits LayoutComponentBase

<HeadContent>
    @if (_bootswatchThemes.ContainsKey(_repository.Settings.Theme))
    {
        <link rel="stylesheet" href="@($"https://cdn.jsdelivr.net/npm/bootswatch@4.6.1/dist/{_repository.Settings.Theme}/bootstrap.min.css")" integrity="@(_bootswatchThemes[_repository.Settings.Theme])" crossorigin="anonymous">
    }
    else
    {
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous">
    }
</HeadContent>

<Container Fluid=true Height=Height.Is100 Display=Display.Flex Flex=Flex.Column>
    <Row>
        <Column Border=Border.Is1>
            Ididit
            <LoginDisplay />
        </Column>
    </Row>
    <Row Flex=Flex.Grow.Is1 Overflow=Overflow.Hidden Background=Background.Secondary>
        @Body
    </Row>
    <Row>
        <Column Border=Border.Is1>
            <Label For="file-upload" Display=Display.Inline Margin=Margin.Is0.FromBottom class="btn btn-primary">Import</Label>
            <InputFile id="file-upload" class="d-none" OnChange=Import />

            <Button Color=Color.Primary Block=false @onclick=ExportJson>Export Json</Button>

            <Button Color=Color.Primary Block=false @onclick=ExportYaml>Export Yaml</Button>

            <Button Color=Color.Primary Block=false @onclick=ExportTsv>Export Tsv</Button>

            <Label For="notes-upload" Display=Display.Inline Margin=Margin.Is0.FromBottom class="btn btn-primary">Import Markdown</Label>
            <InputFile id="notes-upload" class="d-none" webkitdirectory directory multiple OnChange=ImportMarkdown />

            <Button Color=Color.Primary Block=false @onclick=ExportMarkdown>Export Markdown</Button>

            <Button Color=Color.Primary Block=false @onclick=ImportDirectory>Import folder</Button>

            <Button Color=Color.Primary Block=false @onclick=ExportDirectory>Export folder</Button>
        </Column>
    </Row>
</Container>

@*
    https://getbootstrap.com/docs/4.3/layout/grid/
    Containers provide a means to center and horizontally pad your site’s contents. Use .container for a responsive pixel width or .container-fluid for width: 100% across all viewport and device sizes.
    In a grid layout, content must be placed within columns and only columns may be immediate children of rows.

    https://getbootstrap.com/docs/4.3/utilities/flex/

    https://getbootstrap.com/docs/4.3/utilities/borders/

    https://getbootstrap.com/docs/4.3/utilities/sizing/

    https://getbootstrap.com/docs/4.3/utilities/overflow/

    https://blazorise.com/docs/components/grid

    https://blazorise.com/docs/helpers/utilities

    https://bootstrapdemo.blazorise.com/tests/utilities/sizing

    flex-column 
        flex-direction: column!important; 
        - if missing, all child nodes are in a row
    d-flex 
        display: flex!important; 
        - if missing, whole page scrolls, including header and footer
    h-100 
        height: 100%!important; 
        - if missing, whole page scrolls, including header and footer
    container-fluid 
        - if missing, page width is not 100% and horizontal scrollbar is visible
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;
        margin-right: auto;
        margin-left: auto;

    flex-shrink-0
        - if missing, ???
        flex-shrink: 0!important;
    row 
        - if missing, header and footer have 15px margin
        display: flex;
        flex-wrap: wrap;
        margin-right: -15px;
        margin-left: -15px;

    col-12
        - if missing, header and footer don't have 100% width
        position: relative;
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;

        flex: 0 0 100%;
        max-width: 100%;
*@