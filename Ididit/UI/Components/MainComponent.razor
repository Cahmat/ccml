@using Ididit.Backup

<PageTitle>ididit!</PageTitle>

<HeadContent>
    @if (_bootswatchThemes.ContainsKey(Theme) && _workaround == 0)
    {
        <link rel="stylesheet" href="@($"https://cdn.jsdelivr.net/npm/bootswatch@5.1.3/dist/{Theme}/bootstrap.min.css")" integrity="@(_bootswatchThemes[Theme])" crossorigin="anonymous">
    }
    else if (_bootswatchThemes.ContainsKey(Theme) && _workaround == 1)
    {
        <link rel="stylesheet" href="@($"https://cdn.jsdelivr.net/npm/bootswatch@5.1.3/dist/{Theme}/bootstrap.min.css")" integrity="@(_bootswatchThemes[Theme])" crossorigin="anonymous">
    }
    else
    {
        <!--<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous">-->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    }
</HeadContent>

<CascadingValue Value=Size>

    <ErrorBoundary>
        <ChildContent>

            <Container Fluid=true Height=Height.Is100 Display=Display.Flex Flex=Flex.Column>
                <Row Border=Border.Is1.OnTop.Dark>
                    <Column Border=Border.Is1.OnBottom.Primary Display=Display.Flex>

                        <Button Color="Color.Primary" Outline="true" Size="Size" Margin=Margin.IsAuto.FromTop.IsAuto.FromBottom.Is2.FromEnd Padding=Padding.Is0.Is1.OnX @onclick="ToggleSidebar" class="sidebar-toggle-visible">
                            <Icon Class="fa-fw" Name="IconName.Bars" />
                        </Button>

                        <Button Color="Color.Primary" Outline="true" Size="Size" Margin=Margin.IsAuto.FromTop.IsAuto.FromBottom.Is2.FromEnd Padding=Padding.Is0.Is1.OnX @onclick="ToggleOptions">
                            <Icon Class="fa-fw" Name="IconName.Wrench" />
                        </Button>

                        @if (_showDebugControls && IsDebug)
                        {
                            <Button Color="Color.Primary" Outline="true" Size="Size" Margin=Margin.IsAuto.FromTop.IsAuto.FromBottom.Is2.FromEnd Padding=Padding.Is0.Is1.OnX @onclick="DebugTheme">
                                <Icon Class="fa-fw" Name="IconName.Bug" /> @Theme
                            </Button>

                            <Button Color="Color.Primary" Outline="true" Size="Size" Margin=Margin.IsAuto.FromTop.IsAuto.FromBottom.Is2.FromEnd Padding=Padding.Is0.Is1.OnX @onclick="DebugBackground">
                                <Icon Class="fa-fw" Name="IconName.Bug" /> @_background.Name
                            </Button>
                        }

                        <Span Flex=Flex.Grow.Is1 style="font-family: 'Caveat', cursive; font-size: 1.5em;">
                            <a href="https://ididit.today" target="_blank">ididit!</a>
                        </Span>

                        <Inline>
                            <Addons Size=Size.Small Margin=Margin.IsAuto.FromTop.IsAuto.FromBottom Padding=Padding.Is0>
                                <Addon AddonType="AddonType.Start">
                                    <Button Color="Color.Primary" Outline="UnsavedChanges" Size="Size" @onclick="Backup">
                                        <Icon Class="fa-fw" Name="IconName.Save" />
                                    </Button>
                                </Addon>

                                <Select TValue="DataFormat" Size="Size.Small" SelectedValue="Settings.SelectedBackupFormat" SelectedValueChanged="OnDataFormatChanged">
                                    @foreach (DataFormat dataFormat in ImportExport.DataExportByFormat.Keys)
                                    {
                                        <SelectItem Value="dataFormat">@dataFormat.GetDescription()</SelectItem>
                                    }
                                </Select>
                            </Addons>
                        </Inline>

                        @*@UserDisplayName.GetUserDisplayName().Result*@

                    </Column>
                </Row>
                @if (_showOptions)
                {
                    <Row Background=_background Flex=Flex.Grow.Is1 Overflow=Overflow.Auto Display=Display.Block Height=Height.Max100>

                        @if (Ididit.Backup.Online.GoogleDriveBase.IsGoogleDriveAvailable)
                        {
                            <Card Margin=Margin.Is0.OnMobile.Is2.OnDesktop Padding=Padding.Is0 Style="max-width: 414px">
                                <CardBody Padding=Padding.Is1>
                                    <ErrorBoundary>
                                        <ChildContent>
                                            @ChildContent
                                        </ChildContent>
                                        <ErrorContent Context="ex">
                                            <p>@ex.Message</p>
                                        </ErrorContent>
                                    </ErrorBoundary>
                                </CardBody>
                            </Card>
                        }

                        <Options @bind-SelectedCategory=_selectedCategory Themes="_bootswatchThemes.Keys" Size="Size" SizeChanged="OnSizeChanged" Theme="@Theme" ThemeChanged="OnThemeChanged" />

                        @if (IsDebug)
                        {
                            <Card Margin=Margin.Is0.OnMobile.Is2.OnDesktop Padding=Padding.Is0 Style="max-width: 414px">
                                <CardBody Padding=Padding.Is1>

                                    <CheckBox Checked="_showDebugControls" CheckedChanged="OnShowDebugChanged">Show debug controls</CheckBox>

                                </CardBody>
                            </Card>
                        }

                    </Row>
                }
                else
                {
                    <Row Background=_background Flex=Flex.Grow.Is1 class="parent-row">

                        <Column ColumnSize=ColumnSize.Is12.OnMobile.Is3.OnDesktop Padding=Padding.Is0 class="@($"child-column {SidebarVisibilityCss}")" style="min-width: 320px">

                            <Accordion Margin=Margin.Is0.OnMobile.Is2.OnDesktop>
                                <Collapse Visible="@_filtersVisible">
                                    <CollapseHeader Padding=Padding.Is0>

                                        <Button Size=Size.Small Block=true Padding=Padding.Is1.OnY.Is2.OnX @onclick="@(() => _filtersVisible = !_filtersVisible)">Search, filter, sort</Button>

                                    </CollapseHeader>
                                    @*<CollapseBody Padding=Padding.Is0 Style="margin: -12px"> Bootstrap 4 *@
                                    <CollapseBody Padding=Padding.Is0>

                                        <FiltersComponent @bind-Filters="_filters" Settings=Settings />

                                    </CollapseBody>
                                </Collapse>
                                <Collapse Visible="@_categoriesVisible">
                                    <CollapseHeader Padding=Padding.Is0>

                                        <Button Size=Size.Small Block=true Padding=Padding.Is1.OnY.Is2.OnX @onclick="@(() => _categoriesVisible = !_categoriesVisible)">Tasks</Button>

                                    </CollapseHeader>
                                    @*<CollapseBody Padding=Padding.Is0 Style="margin: -12px"> Bootstrap 4 *@
                                    <CollapseBody Padding=Padding.Is0>

                                        <CategoriesComponent @bind-SelectedCategory=_selectedCategory Settings=Settings />

                                    </CollapseBody>
                                </Collapse>
                            </Accordion>

                        </Column>
                        <Column Padding=Padding.Is0 class="child-column">
                            <GoalsComponent @bind-SelectedCategory=_selectedCategory Filters=_filters Settings=Settings />
                        </Column>

                    </Row>
                }
                <Row>
                    <Column Display=Display.Flex Border=Border.Is1.OnTop.Primary>
                        <Span Flex=Flex.Grow.Is1><a href="https://github.com/Jinjinov/Ididit" target="_blank"><span class="fab fa-github"></span> GitHub</a></Span>
                        <Span>&#169; 2022</Span>
                    </Column>
                </Row>
            </Container>

        </ChildContent>
        <ErrorContent Context="ex">
            <p>@ex.Message</p>
        </ErrorContent>
    </ErrorBoundary>

</CascadingValue>

@*
    https://getbootstrap.com/docs/4.3/layout/grid/
    Containers provide a means to center and horizontally pad your site’s contents. Use .container for a responsive pixel width or .container-fluid for width: 100% across all viewport and device sizes.
    In a grid layout, content must be placed within columns and only columns may be immediate children of rows.

    https://getbootstrap.com/docs/4.3/utilities/flex/

    https://getbootstrap.com/docs/4.3/utilities/borders/

    https://getbootstrap.com/docs/4.3/utilities/sizing/

    https://getbootstrap.com/docs/4.3/utilities/overflow/

    https://blazorise.com/docs/components/grid

    https://blazorise.com/docs/helpers/utilities

    https://bootstrapdemo.blazorise.com/tests/utilities/sizing

    flex-column
        flex-direction: column!important;
        - if missing, all child nodes are in a row
    d-flex
        display: flex!important;
        - if missing, whole page scrolls, including header and footer
    h-100
        height: 100%!important;
        - if missing, whole page scrolls, including header and footer
    container-fluid
        - if missing, page width is not 100% and horizontal scrollbar is visible
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;
        margin-right: auto;
        margin-left: auto;

    flex-shrink-0
        - if missing, ???
        flex-shrink: 0!important;
    row
        - if missing, header and footer have 15px margin
        display: flex;
        flex-wrap: wrap;
        margin-right: -15px;
        margin-left: -15px;

    col-12
        - if missing, header and footer don't have 100% width
        position: relative;
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;

        flex: 0 0 100%;
        max-width: 100%;
*@

@*
    row
        - if missing, the second column is not visible
        display: flex;
        flex-wrap: wrap;
        margin-right: -15px;
        margin-left: -15px;

    flex-grow-1
       - if missing, and content is not 100% height, footer will not be at the bottom
       flex-grow: 1!important;

    overflow-hidden
       - if missing, whole page scrolls, including header and footer
       overflow: hidden!important;

    col
       - if missing, column is minimum width
       position: relative;
       width: 100%;
       padding-right: 15px;
       padding-left: 15px;

       flex-basis: 0;
       flex-grow: 1;
       max-width: 100%;

    mh-100
       - if missing, height is over 100%, but not scrollable
       max-height: 100%!important;

    overflow-auto
       - if missing, no vertical scrollbar
       overflow: auto!important;
*@