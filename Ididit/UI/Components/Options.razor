@*@page "/options"*@

@using Ididit.Backup
@using Microsoft.AspNetCore.Components.Forms

<Card Margin=Margin.Is0.OnMobile.Is2.OnDesktop Padding=Padding.Is0 Width=Width.Auto>
    <CardBody Padding=Padding.Is1>

        <Button Color=Color.Primary Size="Size" Block=true @onclick=LoadExamples>Load examples</Button>

        <Button Color=Color.Primary Size="Size" Block=true @onclick=DeleteAll>Delete all</Button>

        <Field Margin=Margin.Is0>
            <FieldLabel>Size:</FieldLabel>

            <Select TValue="Size" Size="Size" SelectedValue="Size" SelectedValueChanged="OnSizeChanged">
                <SelectItem Value="Blazorise.Size.Default">Default</SelectItem>
                @*<SelectItem Value="Blazorise.Size.ExtraSmall">Extra small</SelectItem>*@
                <SelectItem Value="Blazorise.Size.Small">Small</SelectItem>
                <SelectItem Value="Blazorise.Size.Medium">Medium</SelectItem>
                <SelectItem Value="Blazorise.Size.Large">Large</SelectItem>
                @*<SelectItem Value="Blazorise.Size.ExtraLarge">Extra large</SelectItem>*@
            </Select>
        </Field>

        <Field Margin=Margin.Is0>
            <FieldLabel>Themes:</FieldLabel>

            <Select TValue="string" Size="Size" SelectedValue="Theme" SelectedValueChanged="OnThemeChanged">
                <SelectItem Value="@("default")">default</SelectItem>
                @foreach (string theme in Themes)
                {
                    <SelectItem Value="theme">@theme</SelectItem>
                }
            </Select>
        </Field>

        <Label For="JSON-upload" Display=Display.Block Margin=Margin.Is2.FromTop class="btn btn-primary">Import JSON</Label>
        <InputFile id="JSON-upload" class="d-none" OnChange=Import />

        <Button Color=Color.Primary Size="Size" Block=true @onclick="async () => await ExportData(DataFormat.Json)">Export JSON</Button>

        <Label For="YAML-upload" Display=Display.Block Margin=Margin.Is2.FromTop class="btn btn-primary">Import YAML</Label>
        <InputFile id="YAML-upload" class="d-none" OnChange=Import />

        <Button Color=Color.Primary Size="Size" Block=true @onclick="async () => await ExportData(DataFormat.Yaml)">Export YAML</Button>

        <Label For="TSV-upload" Display=Display.Block Margin=Margin.Is2.FromTop class="btn btn-primary">Import TSV</Label>
        <InputFile id="TSV-upload" class="d-none" OnChange=Import />

        <Button Color=Color.Primary Size="Size" Block=true @onclick="async () => await ExportData(DataFormat.Tsv)">Export TSV</Button>

        <Label For="Markdown-upload" Display=Display.Block Margin=Margin.Is2.FromTop class="btn btn-primary">Import Markdown</Label>
        @*<InputFile id="Markdown-upload" class="d-none" webkitdirectory directory multiple OnChange=ImportMarkdown />*@
        <InputFile id="Markdown-upload" class="d-none" OnChange=Import />

        <Button Color=Color.Primary Size="Size" Block=true @onclick="async () => await ExportData(DataFormat.Markdown)">Export Markdown</Button>

        <Button Color=Color.Primary Size="Size" Block=true @onclick=ImportDirectory>Import folder</Button>

        <Button Color=Color.Primary Size="Size" Block=true @onclick="async () => await ExportData(DataFormat.Directory)">Export folder</Button>

        <Button Color=Color.Primary Size="Size" Block=true @onclick=ImportGoogleDrive>Import Google Drive</Button>

        <Button Color=Color.Primary Size="Size" Block=true @onclick="async () => await ExportData(DataFormat.GoogleDrive)">Export Google Drive</Button>

        <Label For="ZIP-upload" Display=Display.Block Margin=Margin.Is2.FromTop class="btn btn-primary">Import Google Keep Takeout ZIP</Label>
        <InputFile id="ZIP-upload" class="d-none" OnChange=Import />

    </CardBody>
</Card>
