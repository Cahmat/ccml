@using Ididit.Data.Models

@if (Goal != null)
{
    IList<TaskModel> tasks = Filters.FilterTasks(Goal.TaskList);

    @if (tasks.Any() || !Filters.HideEmptyGoals)
    {
    <Card Margin=Margin.Is2.FromTop Border=Border.Is0>
        <CardBody Padding=Padding.Is0 Class="overlay-parent">
            @if (EditGoal == Goal && Goal != null)
            {
                <Addons Flex=Flex.NoWrap>
                    <TextEdit @ref=_textEdit Border=Border.Is0 Size="Size" @bind-Text="@_goalName" KeyUp=KeyUp FocusOut=FocusOut Placeholder="Add new goal" />
                    <Addon AddonType="AddonType.End">
                        <Button Color="Color.Primary" Outline="true" Size="Size" @onclick=SaveName><Icon Class="fa-fw" Name="IconName.Save" /></Button>
                        @*<Button Color="Color.Primary" Outline="true" Size="Size" @onclick=CancelEdit><Icon Class="fa-fw" Name="IconName.Times" /></Button>*@
                    </Addon>
                </Addons>
            }
            else
            {
                <Addons Flex=Flex.NoWrap>
                    <TextEdit Border=Border.Is0 Size="Size" Text="@Goal?.Name" ReadOnly=true @onclick=SelectGoal />

                    <Addon AddonType="AddonType.End">
                        @if (Goal != null)
                        {
                            if (Goal.CreateTaskFromEachLine)
                            {
                                <Button Color="Color.Primary" Outline="false" Size="Size" @onclick=ToggleCreateTaskFromEachLine><i class="fas fa-fw fa-tasks"></i></Button>
                            }
                            else
                            {
                                <Button Color="Color.Primary" Outline="true" Size="Size" @onclick=ToggleCreateTaskFromEachLine><i class="fas fa-fw fa-tasks"></i></Button>
                            }
                        }
                        <Button Color="Color.Primary" Outline="true" Size="Size" @onclick=EditName><Icon Class="fa-fw" Name="IconName.Edit" /></Button>
                        <Button Color="Color.Primary" Outline="true" Size="Size" @onclick=DeleteGoal><Icon Class="fa-fw" Name="IconName.Delete" /></Button>
                    </Addon>
                </Addons>
            }

            @if (SelectedGoal == Goal || EditGoal == Goal)
            {
                <Div Class="overlay"></Div>
                <MemoEdit Class="overlay-content" @ref=_memoEdit AutoSize Text="@Goal.Details" Rows="@Goal.Rows" Margin=Margin.Is0 Padding=Padding.Is1 Border=Border.Is0 FocusOut=OnFocusOut TextChanged=OnTextChanged />
            }
            else
            {
                if (Goal.CreateTaskFromEachLine)
                {
                    <Div Class="child-no-margin">
                        @foreach (TaskModel task in tasks)
                        {
                            @if (task.MarkdownHtml is null)
                            {
                                <TaskComponent @key=task Task=task @bind-SelectedTask=_selectedTask />
                            }
                            else
                            {
                                @((MarkupString)task.MarkdownHtml)
                            }

                            @if (!string.IsNullOrEmpty(task.Details))
                            {
                                @((MarkupString)task.DetailsMarkdownHtml)
                            }
                        }
                    </Div>
                }
                else
                {
                    <Div Class="child-no-margin" Padding=Padding.Is1>
                        @((MarkupString)Goal.DetailsMarkdownHtml)
                    </Div>
                }
            }
        </CardBody>
    </Card>
    }
}
