@using Ididit.Data.Model.Models

@if (Goal != null)
{
    IList<TaskModel> tasks = Filters.FilterTasks(Goal.TaskList, Settings);

    @if (tasks.Any() || !Settings.HideEmptyGoals)
    {
    <Card Margin=Margin.Is2.FromTop Border=Border.Is0>

        <CardBody Padding=Padding.Is0>

            <!--<Div Class="overlay-parent">-->

            @if (SelectedGoal == Goal || EditGoal == Goal)
            {
                <!--<Div Class="overlay"></Div>-->

                <!--<Div Class="overlay-content">-->

                    <Addons Flex=Flex.NoWrap>
                        <TextEdit @ref=_textEdit Class="shadow-none" Border=Border.Is0 Size="Size" @bind-Text="@_goalName" KeyUp=KeyUp @onmousedown=FocusIn FocusOut=FocusOut Placeholder="Add new goal" />
                        <Addon AddonType="AddonType.End">
                            <Button Color="Color.Primary" Outline="true" Size="Size" @onclick=SaveName><Icon Class="fa-fw" Name="IconName.Save" /></Button>
                            @*<Button Color="Color.Primary" Outline="true" Size="Size" @onclick=CancelEdit><Icon Class="fa-fw" Name="IconName.Times" /></Button>*@
                        </Addon>
                    </Addons>

                    <MemoEdit Class="shadow-none" AutoSize Text="@Goal.Details" Rows="@Goal.Rows" Margin=Margin.Is0 Padding=Padding.Is1 Border=Border.Is0 @onmousedown=OnFocusIn FocusOut=OnFocusOut TextChanged=OnTextChanged />

                <!--</Div>-->
            }
            else
            {
                <Addons Flex=Flex.NoWrap>
                    <TextEdit Border=Border.Is0 Size="Size" Text="@Goal.Name" ReadOnly=true @onclick=SelectAndEditGoal />

                    <Addon AddonType="AddonType.End">
                        @if (Goal.CreateTaskFromEachLine)
                        {
                            <Button Color="Color.Primary" Outline="false" Size="Size" @onclick=ToggleCreateTaskFromEachLine><i class="fas fa-fw fa-tasks"></i></Button>
                        }
                        else
                        {
                            <Button Color="Color.Primary" Outline="true" Size="Size" @onclick=ToggleCreateTaskFromEachLine><i class="fas fa-fw fa-tasks"></i></Button>
                        }
                        <Button Color="Color.Primary" Outline="true" Size="Size" @onclick=SelectAndEditGoal><Icon Class="fa-fw" Name="IconName.Edit" /></Button>
                        <Button Color="Color.Primary" Outline="true" Size="Size" @onclick=DeleteGoal><Icon Class="fa-fw" Name="IconName.Delete" /></Button>
                    </Addon>
                </Addons>

                @if (Goal.CreateTaskFromEachLine)
                {
                    <!-- no margin in Markdown HTML -->
                    <Div Class="child-no-margin">
                        @foreach (TaskModel task in tasks)
                        {
                            @if (task.MarkdownHtml is null)
                            {
                                <TaskComponent @key=task Task=task @bind-SelectedTask=_selectedTask />
                            }
                            else
                            {
                                @((MarkupString)task.MarkdownHtml)
                            }

                            @if (!string.IsNullOrEmpty(task.DetailsText))
                            {
                                @((MarkupString)task.DetailsMarkdownHtml)
                            }
                        }
                    </Div>
                }
                else if(!Settings.HideGoalsWithSimpleText)
                {
                    <!-- no margin in Markdown HTML -->
                    <Div Class="child-no-margin" Padding=Padding.Is1>
                        @((MarkupString)Goal.DetailsMarkdownHtml)
                    </Div>
                }
            }

            <!--</Div>-->

        </CardBody>

    </Card>
    }
}
