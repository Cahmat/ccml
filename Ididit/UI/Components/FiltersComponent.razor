@*<Card Margin=Margin.Is2.FromTop>
<CardBody Padding=Padding.Is1>*@

    <Addons Flex=Flex.NoWrap>
        <TextEdit Size="Size" Text="@_searchFilter" TextChanged="SearchFilterChanged" Placeholder="Search" />

        <Addon AddonType="AddonType.End">
            <Button Color="Color.Primary" Outline="true" Size="Size" @onclick="ClearSearchFilter"><Icon Class="fa-fw" Name="IconName.Times" /></Button>
        </Addon>
    </Addons>

    <span>Date filter:</span>

    <Addons Flex=Flex.NoWrap>
        <DateEdit TValue="DateTime?" Size="Size" Date="_dateFilter" DateChanged="OnDateChanged" />

        <Addon AddonType="AddonType.End">
            <Button Color="Color.Primary" Outline="true" Size="Size" @onclick="ClearDateFilter"><Icon Class="fa-fw" Name="IconName.Times" /></Button>
        </Addon>
    </Addons>

    <CheckBox Checked="IsTodayChecked" CheckedChanged="TodayCheckedChanged">Today</CheckBox>

    <span>Filters:</span>

    <CheckBox Checked="ShowCategoriesInGoalList" CheckedChanged="OnShowCategoriesInGoalListChanged">Show categories in goal list</CheckBox>

    <CheckBox Checked="HideEmptyGoals" CheckedChanged="OnHideEmptyGoalsChanged">Hide empty goals</CheckBox>

    <CheckBox Checked="HideCompletedTasks" CheckedChanged="OnHideCompletedTasksChanged">Hide completed tasks</CheckBox>

    <Field Margin=Margin.Is0>
        <FieldLabel>
            <CheckBox Checked="ShowElapsedToDesiredRatioOverMin" CheckedChanged="OnShowElapsedToDesiredRatioOverMinChanged">Show tasks with ratio over @ElapsedToDesiredRatioMin %</CheckBox>
        </FieldLabel>
        <Slider Size="Size" Class="custom-range" TValue="long" Min="0" Max="100" Step="5" Value="ElapsedToDesiredRatioMin" ValueChanged="OnElapsedToDesiredRatioMinChanged" />
    </Field>

    <span>Priority:</span>

    @foreach(Priority priority in Enum.GetValues<Priority>())
    {
        <CheckBox Checked="GetShowPriority(priority)" CheckedChanged="(show) => OnShowPriorityChanged(priority, show ?? false)">Show tasks with @priority priority</CheckBox>
    }

    <span>Kind:</span>

    @foreach(TaskKind taskKind in Enum.GetValues<TaskKind>())
    {
        <CheckBox Checked="GetShowTaskKind(taskKind)" CheckedChanged="(show) => OnShowTaskKindChanged(taskKind, show ?? false)">Show @taskKind</CheckBox>
    }

    <Field Margin=Margin.Is0>
        <FieldLabel>Sort by:</FieldLabel>

        <Select TValue="Sort" Size="Size" SelectedValue="Sort" SelectedValueChanged="OnSortChanged">
            <SelectItem Value="Sort.None">None</SelectItem>
            <SelectItem Value="Sort.Name">Name</SelectItem>
            <SelectItem Value="Sort.Priority">Priority</SelectItem>
            <SelectItem Value="Sort.ElapsedTime">Elapsed time</SelectItem>
            <SelectItem Value="Sort.ElapsedToAverageRatio">Elapsed time to Average time ratio</SelectItem>
            <SelectItem Value="Sort.ElapsedToDesiredRatio">Elapsed time to Desired time ratio</SelectItem>
            <SelectItem Value="Sort.AverageToDesiredRatio">Average time to Desired time ratio</SelectItem>
        </Select>
    </Field>

@*</CardBody>
</Card>*@