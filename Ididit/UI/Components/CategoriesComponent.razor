@using Blazorise.TreeView
@using Ididit.Data.Models

<Card Margin=Margin.Is2.OnY>
<CardBody Padding=Padding.Is1>

    <Button Color=Color.Primary Outline=true Size="Size" @onclick=ShowAllGoals><Icon Name="IconName.Remove" />Show all goals</Button>
    <Button Color=Color.Primary Outline=true Size="Size" @onclick=NewCategory><Icon Name="IconName.Add" />Add category</Button>
    <Button Color=Color.Primary Outline=true Size="Size" @onclick=ToggleAll>Toggle all</Button>

    <TreeView Margin=Margin.Is0.Is1.FromTop
              Nodes=Repository.CategoryList
              GetChildNodes="@((CategoryModel? item) => item?.CategoryList)"
              HasChildNodes="@((CategoryModel? item) => item?.CategoryList?.Any() == true)"
              SelectedNode=SelectedCategory
              SelectedNodeChanged=@(async (CategoryModel category) => await OnSelectedCategoryChanged(category))
              NodeStyling="@((item, style) => { style.TextColor = (item?.CategoryList?.Any() == true) ? TextColor.Primary : TextColor.Default; style.Style = "font-weight:bold"; })"
              SelectedNodeStyling="@((item, style) => { style.Style = "padding:0!important"; })"
              @bind-ExpandedNodes=_expandedNodes>
        <NodeContent>
            @if (context == SelectedCategory)
            {
                <EditCategoryComponent @bind-Category=context @bind-EditCategory=_editCategory />
            }
            else
            {
                @context?.Name
            }
        </NodeContent>
    </TreeView>

</CardBody>
</Card>
